$date
	Thu Nov 05 15:40:13 2020
$end
$version
	ModelSim Version 10.5b
$end
$timescale
	1ps
$end

$scope module testbench $end
$var reg 16 ! in1 [15:0] $end
$var reg 16 " in2 [15:0] $end
$var wire 1 # out [15] $end
$var wire 1 $ out [14] $end
$var wire 1 % out [13] $end
$var wire 1 & out [12] $end
$var wire 1 ' out [11] $end
$var wire 1 ( out [10] $end
$var wire 1 ) out [9] $end
$var wire 1 * out [8] $end
$var wire 1 + out [7] $end
$var wire 1 , out [6] $end
$var wire 1 - out [5] $end
$var wire 1 . out [4] $end
$var wire 1 / out [3] $end
$var wire 1 0 out [2] $end
$var wire 1 1 out [1] $end
$var wire 1 2 out [0] $end
$var wire 1 3 overflow $end

$scope module rc $end
$var parameter 32 4 width $end
$var wire 1 5 x [15] $end
$var wire 1 6 x [14] $end
$var wire 1 7 x [13] $end
$var wire 1 8 x [12] $end
$var wire 1 9 x [11] $end
$var wire 1 : x [10] $end
$var wire 1 ; x [9] $end
$var wire 1 < x [8] $end
$var wire 1 = x [7] $end
$var wire 1 > x [6] $end
$var wire 1 ? x [5] $end
$var wire 1 @ x [4] $end
$var wire 1 A x [3] $end
$var wire 1 B x [2] $end
$var wire 1 C x [1] $end
$var wire 1 D x [0] $end
$var wire 1 E y [15] $end
$var wire 1 F y [14] $end
$var wire 1 G y [13] $end
$var wire 1 H y [12] $end
$var wire 1 I y [11] $end
$var wire 1 J y [10] $end
$var wire 1 K y [9] $end
$var wire 1 L y [8] $end
$var wire 1 M y [7] $end
$var wire 1 N y [6] $end
$var wire 1 O y [5] $end
$var wire 1 P y [4] $end
$var wire 1 Q y [3] $end
$var wire 1 R y [2] $end
$var wire 1 S y [1] $end
$var wire 1 T y [0] $end
$var wire 1 # out [15] $end
$var wire 1 $ out [14] $end
$var wire 1 % out [13] $end
$var wire 1 & out [12] $end
$var wire 1 ' out [11] $end
$var wire 1 ( out [10] $end
$var wire 1 ) out [9] $end
$var wire 1 * out [8] $end
$var wire 1 + out [7] $end
$var wire 1 , out [6] $end
$var wire 1 - out [5] $end
$var wire 1 . out [4] $end
$var wire 1 / out [3] $end
$var wire 1 0 out [2] $end
$var wire 1 1 out [1] $end
$var wire 1 2 out [0] $end
$var wire 1 3 overflow $end
$var wire 1 U carry [16] $end
$var wire 1 V carry [15] $end
$var wire 1 W carry [14] $end
$var wire 1 X carry [13] $end
$var wire 1 Y carry [12] $end
$var wire 1 Z carry [11] $end
$var wire 1 [ carry [10] $end
$var wire 1 \ carry [9] $end
$var wire 1 ] carry [8] $end
$var wire 1 ^ carry [7] $end
$var wire 1 _ carry [6] $end
$var wire 1 ` carry [5] $end
$var wire 1 a carry [4] $end
$var wire 1 b carry [3] $end
$var wire 1 c carry [2] $end
$var wire 1 d carry [1] $end
$var wire 1 e carry [0] $end
$var wire 1 f sum [15] $end
$var wire 1 g sum [14] $end
$var wire 1 h sum [13] $end
$var wire 1 i sum [12] $end
$var wire 1 j sum [11] $end
$var wire 1 k sum [10] $end
$var wire 1 l sum [9] $end
$var wire 1 m sum [8] $end
$var wire 1 n sum [7] $end
$var wire 1 o sum [6] $end
$var wire 1 p sum [5] $end
$var wire 1 q sum [4] $end
$var wire 1 r sum [3] $end
$var wire 1 s sum [2] $end
$var wire 1 t sum [1] $end
$var wire 1 u sum [0] $end

$scope begin block_name[15] $end
$var parameter 32 v i $end

$scope module fa $end
$var wire 1 5 x $end
$var wire 1 E y $end
$var wire 1 V carry_in $end
$var wire 1 # z $end
$var wire 1 U carry_out $end
$upscope $end
$upscope $end

$scope begin block_name[14] $end
$var parameter 32 w i $end

$scope module fa $end
$var wire 1 6 x $end
$var wire 1 F y $end
$var wire 1 W carry_in $end
$var wire 1 $ z $end
$var wire 1 V carry_out $end
$upscope $end
$upscope $end

$scope begin block_name[13] $end
$var parameter 32 x i $end

$scope module fa $end
$var wire 1 7 x $end
$var wire 1 G y $end
$var wire 1 X carry_in $end
$var wire 1 % z $end
$var wire 1 W carry_out $end
$upscope $end
$upscope $end

$scope begin block_name[12] $end
$var parameter 32 y i $end

$scope module fa $end
$var wire 1 8 x $end
$var wire 1 H y $end
$var wire 1 Y carry_in $end
$var wire 1 & z $end
$var wire 1 X carry_out $end
$upscope $end
$upscope $end

$scope begin block_name[11] $end
$var parameter 32 z i $end

$scope module fa $end
$var wire 1 9 x $end
$var wire 1 I y $end
$var wire 1 Z carry_in $end
$var wire 1 ' z $end
$var wire 1 Y carry_out $end
$upscope $end
$upscope $end

$scope begin block_name[10] $end
$var parameter 32 { i $end

$scope module fa $end
$var wire 1 : x $end
$var wire 1 J y $end
$var wire 1 [ carry_in $end
$var wire 1 ( z $end
$var wire 1 Z carry_out $end
$upscope $end
$upscope $end

$scope begin block_name[9] $end
$var parameter 32 | i $end

$scope module fa $end
$var wire 1 ; x $end
$var wire 1 K y $end
$var wire 1 \ carry_in $end
$var wire 1 ) z $end
$var wire 1 [ carry_out $end
$upscope $end
$upscope $end

$scope begin block_name[8] $end
$var parameter 32 } i $end

$scope module fa $end
$var wire 1 < x $end
$var wire 1 L y $end
$var wire 1 ] carry_in $end
$var wire 1 * z $end
$var wire 1 \ carry_out $end
$upscope $end
$upscope $end

$scope begin block_name[7] $end
$var parameter 32 ~ i $end

$scope module fa $end
$var wire 1 = x $end
$var wire 1 M y $end
$var wire 1 ^ carry_in $end
$var wire 1 + z $end
$var wire 1 ] carry_out $end
$upscope $end
$upscope $end

$scope begin block_name[6] $end
$var parameter 32 !! i $end

$scope module fa $end
$var wire 1 > x $end
$var wire 1 N y $end
$var wire 1 _ carry_in $end
$var wire 1 , z $end
$var wire 1 ^ carry_out $end
$upscope $end
$upscope $end

$scope begin block_name[5] $end
$var parameter 32 "! i $end

$scope module fa $end
$var wire 1 ? x $end
$var wire 1 O y $end
$var wire 1 ` carry_in $end
$var wire 1 - z $end
$var wire 1 _ carry_out $end
$upscope $end
$upscope $end

$scope begin block_name[4] $end
$var parameter 32 #! i $end

$scope module fa $end
$var wire 1 @ x $end
$var wire 1 P y $end
$var wire 1 a carry_in $end
$var wire 1 . z $end
$var wire 1 ` carry_out $end
$upscope $end
$upscope $end

$scope begin block_name[3] $end
$var parameter 32 $! i $end

$scope module fa $end
$var wire 1 A x $end
$var wire 1 Q y $end
$var wire 1 b carry_in $end
$var wire 1 / z $end
$var wire 1 a carry_out $end
$upscope $end
$upscope $end

$scope begin block_name[2] $end
$var parameter 32 %! i $end

$scope module fa $end
$var wire 1 B x $end
$var wire 1 R y $end
$var wire 1 c carry_in $end
$var wire 1 0 z $end
$var wire 1 b carry_out $end
$upscope $end
$upscope $end

$scope begin block_name[1] $end
$var parameter 32 &! i $end

$scope module fa $end
$var wire 1 C x $end
$var wire 1 S y $end
$var wire 1 d carry_in $end
$var wire 1 1 z $end
$var wire 1 c carry_out $end
$upscope $end
$upscope $end

$scope begin block_name[0] $end
$var parameter 32 '! i $end

$scope module fa $end
$var wire 1 D x $end
$var wire 1 T y $end
$var wire 1 e carry_in $end
$var wire 1 2 z $end
$var wire 1 d carry_out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 !
b0 "
b10000 4
b0 '!
b1 &!
b10 %!
b11 $!
b100 #!
b101 "!
b110 !!
b111 ~
b1000 }
b1001 |
b1010 {
b1011 z
b1100 y
b1101 x
b1110 w
b1111 v
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
0%
0$
0#
03
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
zu
zt
zs
zr
zq
zp
zo
zn
zm
zl
zk
zj
zi
zh
zg
zf
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
$end
#5
b1 !
1D
12
#10
b1 "
1T
02
1d
11
#15
b10 !
0D
1C
01
1c
12
0d
11
0c
#20
b11000111 !
b1100001 "
1O
1N
1D
1B
1>
1=
1+
1^
10
02
1d
1-
01
1c
0+
1]
1*
00
1b
1/
#25
b10000001 !
b0 "
0T
0O
0N
0C
0B
0>
10
0b
11
0c
0^
0-
12
0d
01
1+
0]
00
0/
0*
#30
b1111111111111111 !
b1111111111111111 "
1T
1S
1R
1Q
1P
1O
1N
1M
1L
1K
1J
1I
1H
1G
1F
1E
1C
1B
1A
1@
1?
1>
1<
1;
1:
19
18
17
16
15
1U
1V
1W
1X
1Y
1Z
1[
1\
1^
1_
1`
1a
1b
1c
1#
1$
1%
1&
1'
1(
1)
1]
1,
1-
1.
1/
10
02
1d
11
1*
13
#35
b1 "
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0#
0$
0%
0&
0'
0(
0)
0*
0+
0,
0-
0.
0/
00
01
#40
b0 "
0T
12
0d
11
0c
10
0b
1/
0a
1.
0`
1-
0_
1,
0^
1+
0]
1*
0\
1)
0[
1(
0Z
1'
0Y
1&
0X
1%
0W
1$
0V
1#
0U
03
